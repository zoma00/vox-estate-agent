To open URLs in the web browser based on the chat answer, you can:

1. Parse the AI response for URLs using a regular expression.
2. Use Pythonâ€™s `webbrowser` module to open the URL.

**Example:**
```python
import re
import webbrowser

# Suppose ai_text is the response from OpenAI
ai_text = "You can find more info at https://www.example.com."

# Find URLs in the response
urls = re.findall(r'https?://[^\s]+', ai_text)
for url in urls:
    print(f"Opening: {url}")
    webbrowser.open(url)
```

**How to integrate:**
- After printing the AI response, check for URLs and open them automatically or prompt the user to confirm before opening.

Let me know if you want this added to your CLI script!

#######################################################


You can add this feature to your CLI script to automatically detect and open URLs from the AI response.

**How to integrate into your CLI:**
1. After receiving the AI response, use a regex to find URLs.
2. Use `webbrowser.open(url)` to open each URL.

**Example integration for your CLI:**
```python
import re
import webbrowser

# ...existing code to get ai_text from OpenAI...

print(f"AI response: {ai_text}")

# Find and open URLs
urls = re.findall(r'https?://[^\s]+', ai_text)
for url in urls:
    print(f"Opening: {url}")
    webbrowser.open(url)
```

**Optional:**  
Prompt the user before opening each URL:
```python
for url in urls:
    confirm = input(f"Open {url}? (y/n): ")
    if confirm.lower() == 'y':
        webbrowser.open(url)
```

Let me know if you want this added to a specific CLI file or need a full code update!