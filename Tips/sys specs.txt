You can check your system specs in Ubuntu terminal with these commands:

- CPU info:
  ```bash
  lscpu
  ```

- Memory (RAM) info:
  ```bash
  free -h
  ```

- GPU info (NVIDIA):
  ```bash
  nvidia-smi
  ```

- General system info:
  ```bash
  uname -a
  ```

- Detailed hardware summary:
  ```bash
  sudo lshw -short
  ```

- Disk info:
  ```bash
  lsblk
  ```

Use any of these commands to get the details you need!







hazem-elbatawy@hazem-elbatawy-Vostro-15-3510:~/Downloads/Multi Agent $ lscpu
Architecture:                x86_64
  CPU op-mode(s):            32-bit, 64-bit
  Address sizes:             39 bits physical, 48 bits virtual
  Byte Order:                Little Endian
CPU(s):                      8
  On-line CPU(s) list:       0-7
Vendor ID:                   GenuineIntel
  Model name:                11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz
    CPU family:              6
    Model:                   140
    Thread(s) per core:      2
    Core(s) per socket:      4
    Socket(s):               1
    Stepping:                1
    CPU(s) scaling MHz:      21%
    CPU max MHz:             4200.0000
    CPU min MHz:             400.0000
    BogoMIPS:                4838.40
    Flags:                   fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pa
                             t pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall 
                             nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_
                             good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq 
                             pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma c
                             x16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadlin
                             e_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpui
                             d_fault epb cat_l2 cdp_l2 ssbd ibrs ibpb stibp ibrs_enhanced tpr
                             _shadow flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 av
                             x2 smep bmi2 erms invpcid rdt_a avx512f avx512dq rdseed adx smap
                              avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw av
                             x512vl xsaveopt xsavec xgetbv1 xsaves split_lock_detect user_shs
                             tk dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp
                              hwp_pkg_req vnmi avx512vbmi umip pku ospke avx512_vbmi2 gfni va
                             es vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid m
                             ovdiri movdir64b fsrm avx512_vp2intersect md_clear ibt flush_l1d
                              arch_capabilities
Virtualization features:     
  Virtualization:            VT-x
Caches (sum of all):         
  L1d:                       192 KiB (4 instances)
  L1i:                       128 KiB (4 instances)
  L2:                        5 MiB (4 instances)
  L3:                        8 MiB (1 instance)
NUMA:                        
  NUMA node(s):              1
  NUMA node0 CPU(s):         0-7
Vulnerabilities:             
  Gather data sampling:      Vulnerable
  Ghostwrite:                Not affected
  Indirect target selection: Mitigation; Aligned branch/return thunks
  Itlb multihit:             Not affected
  L1tf:                      Not affected
  Mds:                       Not affected
  Meltdown:                  Not affected
  Mmio stale data:           Not affected
  Reg file data sampling:    Not affected
  Retbleed:                  Not affected
  Spec rstack overflow:      Not affected
  Spec store bypass:         Mitigation; Speculative Store Bypass disabled via prctl
  Spectre v1:                Mitigation; usercopy/swapgs barriers and __user pointer sanitiza
                             tion
  Spectre v2:                Mitigation; Enhanced / Automatic IBRS; IBPB conditional; PBRSB-e
                             IBRS SW sequence; BHI SW loop, KVM SW loop
  Srbds:                     Not affected
  Tsx async abort:           Not affected
hazem-elbatawy@hazem-elbatawy-Vostro-15-3510:~/Downloads/Multi Agent $ 




Your system has an 11th Gen Intel Core i5-1135G7 CPU (4 cores, 8 threads). This is a capable laptop CPU, but not a workstation chip. Here’s why you may be having trouble running Docker CUDA, Wav2Lip, and FastAPI together:

### Possible Reasons for System Instability

1. **Low VRAM on GPU**:  
   Your NVIDIA GeForce MX350 has only 2GB VRAM, which is very limited for deep learning models like Wav2Lip. Running CUDA containers with such a GPU can easily exhaust VRAM and cause system instability or crashes.

2. **Integrated Graphics/Hybrid GPU**:  
   Laptops with both Intel and NVIDIA GPUs sometimes have issues with GPU passthrough to Docker, especially if drivers or PRIME switching aren’t perfect.

3. **Resource Contention**:  
   Running FastAPI, Docker, and Wav2Lip (which is heavy) at the same time can use a lot of RAM and CPU, possibly leading to swapping or OOM (out of memory) situations.

4. **Thermal/Power Limits**:  
   Laptops can throttle or even shut down processes if they overheat or draw too much power.

5. **Driver/Toolkit Issues**:  
   Any mismatch or instability in NVIDIA drivers, CUDA, or the container toolkit can cause crashes.

### What You Can Do

- **Monitor resources**:  
  Use `htop` (CPU/RAM) and `watch -n 1 nvidia-smi` (GPU) to see if you’re running out of memory or VRAM.
- **Try CPU-only mode**:  
  Use the old Dockerfile (no CUDA) to run Wav2Lip on CPU. It will be slower, but more stable on your hardware.
- **Reduce workload**:  
  Close other apps, and try running only one heavy process at a time.
- **Check logs**:  
  Look at `dmesg` and Docker logs for OOM or GPU errors after a crash.

If you want, I can help you switch your pipeline back to CPU-only for stability, or help you optimize for your limited GPU. Let me know your preference!
